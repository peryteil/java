1. professor table에서 p_id가 3 이상인 자료의 이름과 전화번호를 
   출력하고, 이름에 대해서 내림차순으로 정렬합니다.
select name , phone
from professor
where p_id >= 3
ORDER BY name DESC;

select name, phone from professor
where p_id >= 3;
+-----------+-------------+
| name      | phone       |
+-----------+-------------+
| 호날두    | 01034343222 |
| 케이멀    | 01023424343 |
| 김형민    | 01023432432 |
+-----------+-------------+
3 rows in set (0.00 sec)

2. student table에서 belong 이 COMPUTER 인 자료의 아이디, 이름, 소속
을 출력하세요.

select s_id, name, belong
from student
where belong = 'COMPUTER';

select s_id, name, belong from student
where belong in ('computer');

+----------+-----------+----------+
| s_id     | name      | belong   |
+----------+-----------+----------+
| 20090101 | 루피      | COMPUTER |
| 20080104 | 장원영    | COMPUTER |
| 20080501 | 크리링    | COMPUTER |
+----------+-----------+----------+
3 rows in set (0.00 sec)

3. student table에서 belong 이 'dance' 또는 'music' 또는 'sports' 인 자료의 
           아이디, 이름, 소속을 출력하세요.

SELECT s_id, name, belong
FROM student
WHERE belong IN ('dance', 'music', 'sports');

select s_id, name, belong from student
where belong in ('dance','music','sport');

+----------+-----------+--------+
| s_id     | name      | belong |
+----------+-----------+--------+
| 20100102 | 조로      | DANCE  |
| 20110103 | 상디      | SPORTS |
| 20100204 | 버기      | DANCE  |
| 20090105 | 쵸파      | MUSIC  |
| 20090301 | 에릭      | DANCE  |
| 20110506 | 오천      | SPORTS |
| 20100507 | 베지터    | DANCE  |
| 20110502 | 부우      | DANCE  |
| 20090503 | 피콜로    | MUSIC  |
| 20090509 | 셀        | DANCE  |
+----------+-----------+--------+
10 rows in set (0.00 sec)

4. student 테이블에서 id가 010을 포함하는 자료들의 id와 이름

SELECT s_id, name
FROM student
WHERE s_id LIKE '%010%';

select s_id, name from student
where s_id like '%010%';

+----------+-----------+----------+
| s_id     | name      | belong   |
+----------+-----------+----------+
| 20090101 | 루피      | COMPUTER |
| 20100102 | 조로      | DANCE    |
| 20110103 | 상디      | SPORTS   |
| 20100204 | 버기      | DANCE    |
| 20110106 | 프랑키    | ENGLISH  |
| 20080104 | 장원영    | COMPUTER |
| 20090105 | 쵸파      | MUSIC    |
| 20100505 | 오공      | Golf     |
| 20100507 | 베지터    | DANCE    |
+----------+-----------+----------+
9 rows in set (0.00 sec)

5. student 테이블에서 name이 세자인 자료


SELECT * 
FROM student
WHERE CHAR_LENGTH(name) = 3;

select * from student where name like '___';

6. 학생테이블에서 id가 2009가 포함되지 않은 자료...
SELECT s_id
FROM student
WHERE s_id NOT LIKE '%2009%';

select * from student where s_id not like '%2009%';

7. 학생테이블에서 belong이 music 또는 computer 또는 english 인 자료 중
   id에 2011을 포함하는 자료를 status에 대해 내림차순으로 정렬해 주세요
   (출력은 id, 이름, 소속, 전화번호, 교수_ID 로 column이름이 나타나도록
    합니다.)

SELECT s_id, name, belong, phone
FROM student
WHERE belong IN ('music', 'computer', 'english')
  AND s_id LIKE '%2011%'
ORDER BY status DESC;

select s_id as id, name as 이름, belong as 소속,
phone as 전화번호, status as 교수_ID
from student
where belong in ('music','computer','english') and
s_id like '%2011%'
order by status desc;

8. 학생테이블에서 이름 '전진'을 삭제합니다.

DELETE FROM student
WHERE name = '전진';

delete from student where name = '전진';

9.아래의 자료를 학생테이블에 입력합니다.
20090302   
전진
COMPUTER
01012321313  
3

INSERT INTO student (s_id, name, belong, phone, status)
VALUES ('20090302', '전진', 'COMPUTER', '01012321313', 3);

insert into student (s_id, name, belong, phone, status)
values ('20090302', '전진', 'computer', '01012321313',3);

10. 학생테이블 중 전화번호에 131 을 포함하고 있는 자료를
   삭제하세요.

DELETE FROM student
WHERE phone LIKE '%131%';

delete from student where phone like '%131%';

11.학생테이블의 id가 20080104 인 학생의 이름을 '장원영'으로 
바꾸세요
update student
set name = '장원영'
WHERE s_id = '20080104';

update student set name='장원영'
where s_id = ' 20080104';


12.학생테이블의 이름이 '부우'인 친구의 belong을 DANCE,
               전화번호를 010-7777-7777로 바꿉니다.
UPDATE student
SET belong = 'DANCE',
    phone = '010-7777-7777'
WHERE name = '부우';

update student set 
	belong = 'DANCE', 
	phone = '010-7777-7777'
where name='부우';

13.professor 테이블명을 teacher 로 변경합니다.
RENAME TABLE professor TO teacher;

alter table professor
rename to teacher;

SHOW TABLES; 테이블명 보기

14.학생테이블에을 소속별 몇명씩 있는지 출력하세요.

SELECT belong, COUNT(*) AS 인원수
FROM student
GROUP BY belong;

select belong, count(*) from student
group by belong;

15.belong이 Dance 또는 Music 또는 sports 인 학생들의 status 의 합계, 평균을 구하고,
    합계가 2 초과인 자료에 대하여, 합계에 대한 내림차순으로 정렬해서 출력하세요..

SELECT belong, 
       SUM(status) AS 합계, 
       AVG(status) AS 평균
FROM student
WHERE belong IN ('Dance', 'Music', 'Sports')
GROUP BY belong
HAVING SUM(status) > 2
ORDER BY 합계 DESC;

select belong as 소속, sum(status) as 합계,
avg(status) as 평균
from student
where belong in ('dance', 'music','sports')
group by belong
having 합계 > 2
order by 합계 desc;




